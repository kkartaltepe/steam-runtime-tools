# Copyright Â© 2019 Collabora Ltd.
#
# SPDX-License-Identifier: MIT
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

variables:
    BUILD_IMAGE: 'debian:trixie-slim'
    CI_DISABLE_LIBRARY: ''
    CI_DISTCHECK: ''
    CI_MAKE_J: '-j -l2'

    # A known-good version of deb-build-snapshot
    DEB_BUILD_SNAPSHOT_TAG: v0.20190828.0

before_script:
    - |
        set -eux
        apt-get -y update
        apt-get install -y --no-install-recommends \
          autoconf \
          autoconf-archive \
          automake \
          bubblewrap \
          build-essential \
          ca-certificates \
          chrpath \
          debhelper \
          devscripts \
          dh-autoreconf \
          git \
          gtk-doc-tools \
          libelf-dev \
          libipc-run-perl \
          libglib2.0-dev \
          libxml2 \
          perl \
          python3-debian \
          rsync \
          xsltproc \
          zlib1g \
          ${NULL+}

.build:
    image: ${BUILD_IMAGE}
    script: |
        set -eux
        NOCONFIGURE=1 ./autogen.sh
        ./configure \
            CC=${CC-cc} \
            ${CI_DISABLE_LIBRARY+--disable-library} \
            SANITIZE_CFLAGS="${SANITIZE_CFLAGS-}" \
            ${NULL+}
        make ${CI_MAKE_J}
        make ${CI_MAKE_J} check
        if [ -n "$CI_DISTCHECK" ]; then
            make ${CI_MAKE_J} distcheck
        fi
    artifacts:
        paths:
            - config.log
            - test-suite.log

build:ubsan:
    extends: .build
    variables:
        SANITIZE_CFLAGS: "-fsanitize=undefined -fno-sanitize=alignment -static-libubsan"

build:asan:
    extends: .build
    variables:
        # The actual libcapsule library doesn't work with AddressSanitizer,
        # but at least we can unit-test utility code and test the tools
        CI_DISABLE_LIBRARY: "yes"
        SANITIZE_CFLAGS: "-fsanitize-recover=all -fsanitize=address -fsanitize=undefined -fno-sanitize=alignment -fPIE -pie"

.deb-build-snapshot:
    image: ${BUILD_IMAGE}
    script: |
        set -eux

        set -- --upstream --source

        mkdir -p "debian/tmp/artifacts/${CI_JOB_NAME}"
        set -- "$@" --download "$(pwd)/debian/tmp/artifacts/${CI_JOB_NAME}"

        if [ -n "${CI_DISPOSABLE_ENVIRONMENT-}" ]; then
            set -- "$@" --install --force-local-install
        fi

        tempdir="$(mktemp -d)"
        git clone --branch ${DEB_BUILD_SNAPSHOT_TAG} https://gitlab.collabora.com/smcv/deb-build-snapshot.git "$tempdir/deb-build-snapshot"
        "$tempdir/deb-build-snapshot/deb-build-snapshot" "$@" localhost
        rm -fr "$tempdir"
    artifacts:
        paths:
            - debian/tmp/artifacts/${CI_JOB_NAME}

build:buster:
    extends: .deb-build-snapshot
    variables:
        BUILD_IMAGE: 'debian:buster-slim'

build:bullseye:
    extends: .deb-build-snapshot
    variables:
        BUILD_IMAGE: 'debian:bullseye-slim'

build:bionic:
    extends: .deb-build-snapshot
    variables:
        BUILD_IMAGE: 'ubuntu:bionic'

build:arch:
    when: manual
    extends: .build
    variables:
        BUILD_IMAGE: 'archlinux'
    before_script:
        # bubblewrap-suid instead of bubblewrap will be necessary on some
        # kernels.
        #
        # Full test coverage is likely to require running with
        # docker run --privileged, which Gitlab-CI doesn't normally do;
        # as much as anything, this is here to document what's necessary
        # to build libcapsule with full test coverage.
        - |
            pacman -Syu --needed --noconfirm --noprogressbar \
            autoconf \
            autoconf-archive \
            automake \
            bubblewrap \
            chrpath \
            gcc \
            glib2 \
            gtk-doc \
            libelf \
            libtool \
            libxml2 \
            libxslt \
            make \
            perl \
            perl-ipc-run \
            pkgconf \
            sudo \
            ${NULL+}

reuse:
    image:
        name: fsfe/reuse:latest
        entrypoint: [""]
    before_script: []
    script:
        - reuse lint
